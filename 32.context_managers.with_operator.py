# Чтобы всегда закрывать файл после работы с ним(или в случаи исключения) можно использовать with
fp = None
try:
    with open('text.txt') as f:
        for t in fp:
            print(t)
except Exception as e:
    print(e)

# Менеджер контекста with включает в себя:
# __enter__() - срабатывает в момент создания объекта менеджера контекста
# __exit__() - срабатывает в момент завершения работы менеджера контекста или возникновения исключения


# Создадим свой менеджер контекста для изменения вектора(если есть исключение, то основной массив не изменяется)
class DefenderVector:
    def __init__(self, v):
        # Основной массив(в который заносим изменения)(в нашем случае это v1)
        self.__v = v

    def __enter__(self):
        # При создании объекта
        # (использовании AS, создаем копию основного массива и в дальнейшем выполняем с ним все операции)
        # (в нашем случае это dv)
        self.__temp = self.__v[:]
        return self.__temp

    def __exit__(self, exc_type, exc_val, exc_tb):
        # Если небыло исключений, вносим изменения в основной массив из копии
        # (над который выполняли операции в контекстном менеджере)
        if exc_type is None:
            self.__v[:] = self.__temp
        return False


v1 = [1, 2, 3]
v2 = [2, 3]
try:
    with DefenderVector(v1) as dv:
        for i, a in enumerate(dv):
            dv[i] += v2[i]
except:
    print("Ошибка")

print(v1)
