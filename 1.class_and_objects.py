class Point:
    # Описание класса
    "Класс для представления координат точек на плоскости"
    # Атрибуты (свойства) класса
    color = 'red'
    circle = 2

# Просматриваем описание класса Point
print(Point.__doc__)

# Меняем значение свойства класса
Point.color = 'black'
# Читаем значение свойства класса
print(Point.color)
# Или если есть, то выводится свойство, если нет, то вернется False
print(getattr(Point, 'color', False))
# Динамически добавляем свойство класса Point
Point.style = 'test'
# Или если нет атрибута, то создаем, если есть, то меняем
setattr(Point, 'line', 1)
# Проверяем есть ли атрибут в классе Point(True есть, False нет)
# При этом hasattr показывает есть ли доступ к свойству
# (если вызвать у пустого экземпляра класса, будет True через свойство класса)
print(hasattr(Point, 'style'))
# Удаляем атрибут класса Point (если его нет, то исключение)
del Point.style
# Или
delattr(Point, 'circle')
# Смотрим все атрибуты класса
print(Point.__dict__)


# Создаем экземпляры класса
a = Point()
b = Point()
# Проверяем что a является обьектом класса Point
print(type(a))
# или
print(type(a) == Point)


# У экземпляра класса щас нет собственных свойств
print(a.__dict__)
# Через экземпляр класса может получить свойство класса
print(a.color)


# Создаем свойство экземпляра класса
a.color = 'green'
print(a.color)
print(a.__dict__)
# Экземпляр класса b не имеет своего свойства и ссылается на свойство класса Point
print(b.color)
print(b.__dict__)

# Создаем координаты точки для обьектов класса Point
a.x = 2
a.y = 3
b.x = 4
b.y = 1