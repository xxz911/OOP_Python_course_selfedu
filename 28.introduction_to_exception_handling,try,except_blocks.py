# Программа выполняется сверху вниз, выводится три записи и потом исключение, программа завершается
# Есть два типа исключений:
# 1. Исключения, которые появляются в процессе выполнения программы называются ИСКЛЮЧЕНИЯМИ В ПРОЦЕССЕ ВЫПОЛНЕНИЯ
# 2. ИСКЛЮЧЕНИЯ В ПРОЦЕССЕ КАМПИЛЯЦИИ(как правило это синтаксические ошибки,
# например пробел перед командой print(a), тогда программа вообще не запустится)
print('Первая строка')
print('Вторая строка')
print('Третья строка')
# print(a)
print('Четвертая строка')
print('Пятая строка')

# Когда мы обрабатываем исключения, нас интересуют именно ИСКЛЮЧЕНИЯ В ПРОЦЕССЕ ВЫПОЛНЕНИЯ
# Например, когда пишем код, для открытия файла, его имя вводит пользователь,
# и он можем ввести имя файла, которого не существует, что приведет к исключению,
# мы должны как разработчики понимать, где возможна ошибка и уметь обрабатывать такие исключения


# Мы отлавливаем FileExistsError(
# если имя файла будет введено некорректно, если это случится, то ПРОГРАММА БУДЕТ РАБОТАТЬ ДАЛЬШЕ
try:
    f = open('text2.txt')
except FileNotFoundError:
    print("Невозможно открыть файл")

# Отлавливаем несколько исключений
try:
    x, y = map(int, input("Введите 2 числа через пробел : ").split())
    res = x / y
# Можем указать несколько видов исключений в одном месте, но лучше по отдельности,
# так как мы можем раздельно обрабатывать разные ошибки
# except (ValueError, ZeroDivisionError):
#     print("Ошибка типа данных")
except ValueError:
    print("Ошибка типа данных")
except ZeroDivisionError:
    print("Деление на ноль")

print("Штатное завершение  1 блока программы")

# Существует иерархия исключений, во главе стоит BASE EXCEPTION,
# она полезна, так как если мы обработаем родительский класс, то будут обрабатываться и дочерние классы ошибок
# например ZeroDivisionError наследуется от ArithmeticError,
# который является родительским классом и для FloatingPointError и OverflowError,
# тем самым обработав ArithmeticError мы охватываем и 3 дочерних класса

# Тут важен порядок, так как Exception обрабатывает все включающие исключения,
# если он будет стоять первым, то TypeError никогда не сработает, а сработает Exception
try:
 b = sum("sas" + 2)
 a = 1/ 0
except TypeError:
    print("Ошибка типа данных")
except Exception:
    print("Общее исключение")

# Если прописать так, то будут обрабатываться ВСЕ ИСКЛЮЧЕНИЯ
# except:
#     print("Ошибка")

print("Штатное завершение 2 блока программы")

# ОТСЮДА ЕСТЬ ПРАВИЛО, сначала прописываются специализированные исключения, а потом базовые исключения
