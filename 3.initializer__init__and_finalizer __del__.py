# Магические методы обозначаются __имя магического метода__
# __init__(self) - инициализатор объекта класса(вызывается сразу после создания экземпляра класса)
# __del__(self) - финализатор класса(вызывается перед удалением экземпляра класса)

# Код из прошлого урока не удобно использвовать, так как надо сначала создать экземпляр класса
# и потом использовать метод для добавления локальных свойств экземпляра класса
class Point:
    color = 'red'
    circle = 2

    # Метод для создания локальных свойств экземпляра
    def set_x(self, x):
        self.x = x

    # Метод для вывода локальных свойств экземпляра
    def get_x(self):
        return self.x

pt = Point()
pt.set_x(5)
print(pt.__dict__)

# Тут будет полезен магический метод __init__,
# который позволит сразу указывать локальные свойства для экземпляра класса в момент его создания
class Point2:
    color = 'black'
    circle = 3

    def __init__(self, x):
        print("вызов __init__")
        self.y = x

#     Так же как и в любом методе мы может указывать формальные параметры(по умолчанию)
#     def __init__(self, x=0):
#         print("вызов __init__")
#         self.y = x
# pt3 = Point2()

    # Как только программа завершилась, экземпляр класса был удален(при завершении программы все обьекты удаляются автоматически)
    # Работает сборщик мусора(когда есть внешняя ссылка на обьект, он нужен, если нет, то удаляет из памяти)
    def __del__(self):
        print("Удаление экземпляра : "  + str(self))
pt2 = Point2(9)
print(pt2.__dict__)